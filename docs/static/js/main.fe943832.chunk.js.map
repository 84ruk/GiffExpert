{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,gDACoCC,UAAUH,GAD9C,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAYXM,GAZW,4CAAH,sDCENO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC6BDO,EA7BQ,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACrB,ECJwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,CAAC,IACPa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGZ,CAAEpB,IAIEqB,EDpBwBQ,CAAc7B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAOpB,OACI,qCACI,oBAAIJ,UAAU,yCAAd,SAAwDhB,IAEvDoB,GAAW,2CAGf,qBAAKJ,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYpBmB,EAhCW,WAEvB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAMD,OACE,qCAEA,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC5B,uBAGA,6BAEI8C,EAAWtB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCjBtBgC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.fe943832.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n/* import GifExpertApp from '../GiffExpert' */\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats  ] );\r\n            setInputValue(' ');\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGif = async(category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=jUBEJEQ4KyH1t4AJxJXGRJbKPsVgVtPF`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs ;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n/* import { getGif } from '../helpers/getGifs'; */\r\nimport { GifGridItem } from './GifGridItem';\r\n/* import GifGridItem from './GifGridItem'; */\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n/*     useEffect( () =>{\r\n        getGif(category)\r\n            .then(setImgs);\r\n    }, [ category ] )  */\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInUpBig\">{category}</h3>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            \r\n         <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","\r\nimport {useState, useEffect} from 'react'\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [''],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect( () => {\r\n        getGif( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    console.log(imgs)\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 1000);\r\n   \r\n            } ) ;\r\n    }, [ category ] )\r\n\r\n    \r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n/* import  GifGrid  from './components/GifGrid'; */\r\n/* import ProptTypes from 'prop-types'; */\r\n\r\nexport const GifExpertApp = () => { \r\n    /* const categories = ['One Punch', 'Samurai X', 'Dragon Ball'] */\r\n     const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n/*     const handleAdd = () => {\r\n        setCategories( ['Hunter', ...categories]);\r\n    }\r\n  */\r\n    return (\r\n      <>\r\n\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories = {setCategories}/>\r\n        <hr />\r\n\r\n        \r\n        <ol>\r\n        {\r\n            categories.map( category => (\r\n                 <GifGrid \r\n                 key={category}\r\n                 category={category}/>\r\n            ))\r\n        }\r\n\r\n        </ol>\r\n\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GiffExpert';\n\nimport './index.css';\n\n\n\nReactDOM.render(<GifExpertApp />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}